name: Playlist Fetcher

on:
  schedule:
    - cron: "*/15 * * * *"   # Runs every 15 minutes
  workflow_dispatch:

concurrency:
  group: update-playlists
  cancel-in-progress: false

jobs:
  update-playlists:
    runs-on: ubuntu-latest

    env:
      PLAYLISTS: |
        Fancode|FANCODE_INPUT_PATH|FANCODE_OUTPUT_PATH|FANCODE_URL|15
        Willow|WILLOW_INPUT_PATH|WILLOW_OUTPUT_PATH|WILLOW_URL|15
        JioTVPlus|JIOTVPLUS_INPUT_PATH|JIOTVPLUS_OUTPUT_PATH|JIOTVPLUS_URL|15
        Zee5|ZEE5_INPUT_PATH|ZEE5_OUTPUT_PATH|ZEE5_URL|15
        SonyLIV|SONYLIV_INPUT_PATH|SONYLIV_OUTPUT_PATH|SONYLIV_URL|15
        Hotstar|HOTSTAR_INPUT_PATH|HOTSTAR_OUTPUT_PATH|HOTSTAR_URL|15

    steps:
      # -------------------------
      # Checkout repo
      - name: Checkout Private Repo
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.PRIVATE_REPO_NAME }}
          token: ${{ secrets.PRIVATE_REPO_PAT }}

      # -------------------------
      # Setup Python
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      # -------------------------
      # Cache Python dependencies
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # -------------------------
      # Install dependencies (ensure tqdm installed)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt
          pip install --no-cache-dir tqdm --upgrade
      - name: Verify installed Python packages
        run: pip list

      # -------------------------
      # Update playlists and LIVE playlist
      - name: Update Playlists & Run LIVE Playlist Checker
        shell: bash
        env:
          # Existing playlists

          FANCODE_INPUT_PATH: ${{ secrets.FANCODE_INPUT_PATH }}
          FANCODE_OUTPUT_PATH: ${{ secrets.FANCODE_OUTPUT_PATH }}
          FANCODE_URL: ${{ secrets.FANCODE_URL }}

          WILLOW_INPUT_PATH: ${{ secrets.WILLOW_INPUT_PATH }}
          WILLOW_OUTPUT_PATH: ${{ secrets.WILLOW_OUTPUT_PATH }}
          WILLOW_URL: ${{ secrets.WILLOW_URL }}

          JIOTVPLUS_INPUT_PATH: ${{ secrets.JIOTVPLUS_INPUT_PATH }}
          JIOTVPLUS_OUTPUT_PATH: ${{ secrets.JIOTVPLUS_OUTPUT_PATH }}
          JIOTVPLUS_URL: ${{ secrets.JIOTVPLUS_URL }}

          ZEE5_INPUT_PATH: ${{ secrets.ZEE5_INPUT_PATH }}
          ZEE5_OUTPUT_PATH: ${{ secrets.ZEE5_OUTPUT_PATH }}
          ZEE5_URL: ${{ secrets.ZEE5_URL }}

          SONYLIV_INPUT_PATH: ${{ secrets.SONYLIV_INPUT_PATH }}
          SONYLIV_OUTPUT_PATH: ${{ secrets.SONYLIV_OUTPUT_PATH }}
          SONYLIV_URL: ${{ secrets.SONYLIV_URL }}

          HOTSTAR_INPUT_PATH: ${{ secrets.HOTSTAR_INPUT_PATH }}
          HOTSTAR_OUTPUT_PATH: ${{ secrets.HOTSTAR_OUTPUT_PATH }}
          HOTSTAR_URL: ${{ secrets.HOTSTAR_URL }}

          # LIVE playlist
          LIVE_INPUT_PATH: ${{ secrets.LIVE_INPUT_PATH }}
          LIVE_OUTPUT_PATH: ${{ secrets.LIVE_OUTPUT_PATH }}
          LIVE_LOG_PATH: ${{ secrets.LIVE_LOG_PATH }}

        run: |
          set -e

          RED='\033[0;31m'
          GREEN='\033[0;32m'
          YELLOW='\033[1;33m'
          NC='\033[0m'

          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          CHANGED_PLAYLISTS=()
          MINUTE=$(date +%M)
          echo -e "${GREEN}üïí Current minute: $MINUTE${NC}"

          # -------------------------
          # Loop through all playlists
          while IFS='|' read -r NAME INPUT_SECRET OUTPUT_SECRET URL_SECRET INTERVAL; do
            [[ -z "$NAME" ]] && continue
            [[ -z "$INTERVAL" ]] && INTERVAL=0

            if (( INTERVAL > 0 && (INTERVAL == 15 || 10#$MINUTE % INTERVAL == 0) )); then
              echo -e "${GREEN}‚è∞ Updating $NAME...${NC}"
              if ! python scripts/update_${NAME,,}.py; then
                echo -e "${RED}‚ö† $NAME update failed, skipping.${NC}"
                continue
              fi
            else
              echo -e "${YELLOW}‚è© Skipping $NAME this run${NC}"
            fi

            if [[ -n "$OUTPUT_SECRET" ]]; then
              OUTPUT_PATH="${!OUTPUT_SECRET}"
              if [ -f "$OUTPUT_PATH" ]; then
                git add "$OUTPUT_PATH"
                if ! git diff --cached --quiet "$OUTPUT_PATH"; then
                  CHANGED_PLAYLISTS+=("$NAME")
                  echo -e "${GREEN}‚úÖ $NAME playlist updated.${NC}"
                else
                  echo -e "${YELLOW}‚ö™ $NAME playlist unchanged.${NC}"
                  git restore --staged "$OUTPUT_PATH" || true
                fi
              else
                echo -e "${RED}‚ö† $NAME output file does not exist: $OUTPUT_PATH${NC}"
              fi
            fi

          done <<< "$PLAYLISTS"

          # -------------------------
          # Run LIVE Playlist Checker safely
          echo -e "${GREEN}üîç Running LIVE Playlist Checker...${NC}"
          if ! python scripts/check_playlist.py; then
            echo -e "${RED}‚ö† LIVE Playlist Checker failed, skipping.${NC}"
          fi

          if [[ -f "$LIVE_OUTPUT_PATH" ]]; then
            git add "$LIVE_OUTPUT_PATH"
            if ! git diff --cached --quiet "$LIVE_OUTPUT_PATH"; then
              CHANGED_PLAYLISTS+=("LIVE_PLAYLIST")
              echo -e "${GREEN}‚úÖ LIVE playlist updated.${NC}"
            else
              echo -e "${YELLOW}‚ö™ LIVE playlist unchanged.${NC}"
              git restore --staged "$LIVE_OUTPUT_PATH" || true
            fi
          else
            echo -e "${RED}‚ö† LIVE output file does not exist: $LIVE_OUTPUT_PATH${NC}"
          fi

          # -------------------------
          # Commit & push changes (skip pull/rebase to avoid unstaged errors)
          if [ ${#CHANGED_PLAYLISTS[@]} -ne 0 ]; then
            git commit -m "üîÑ Auto-update playlists: ${CHANGED_PLAYLISTS[*]}" || echo "No changes to commit"
            git push origin main
            echo -e "${GREEN}‚úÖ Changes pushed for: ${CHANGED_PLAYLISTS[*]}${NC}"
          else
            echo -e "${RED}üö´ No playlists changed. Skipping commit.${NC}"
          fi
