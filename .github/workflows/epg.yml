name: EPG Grabber

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */4 * * *"
    - cron: "00 22 * * *"

permissions:
  contents: write

concurrency:
  group: epg-grabber-main
  cancel-in-progress: true  # Cancel any running workflow in the same group

jobs:
  run-epg:
    runs-on: ubuntu-latest
    env:
      EPG_REPO_NAME: ${{ secrets.EPG_REPO_NAME }}
      EPG_REPO_PAT: ${{ secrets.EPG_REPO_PAT }}
      EPG_JIO_URL: ${{ secrets.EPG_JIO_URL }}
      TZ: Asia/Kolkata

    steps:
      # --- Checkout Private Repo ---
      - name: Checkout private EPG repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.EPG_REPO_NAME }}
          ref: main
          token: ${{ env.EPG_REPO_PAT }}
          path: epg-repo

      - name: Configure Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions Bot"

      # --- Setup Environments ---
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          extensions: xml, imagick, zip, curl

      # --- Install Dependencies ---
      - name: Install Node.js dependencies
        working-directory: epg-repo
        run: npm install --legacy-peer-deps

      - name: Install Python dependencies
        working-directory: epg-repo
        run: |
          [ -f requirements.txt ] && pip install -r requirements.txt || true

      - name: Install 7-Zip
        run: sudo apt-get update -qq && sudo apt-get install -y -qq p7zip-full

      # --- Grab and Merge EPG ---
      - name: Grab all EPGs in parallel
        working-directory: epg-repo
        run: |
          set -e
          grab_provider() {
            PROVIDER_PATH=$1
            BASENAME=$(basename "$PROVIDER_PATH" .xml)
            OUTFILE="tmp_xml/${BASENAME}.xml"
            mkdir -p tmp_xml
            if [ -f "sites/$PROVIDER_PATH" ]; then
              echo "[$BASENAME] Running grab..."
              if ! npm run grab -- --channels="sites/$PROVIDER_PATH" --maxConnections=10 --days=2 --output="$OUTFILE"; then
                echo "[$BASENAME] ‚ùå Failed, creating placeholder..."
                echo "<?xml version='1.0' encoding='UTF-8'?><tv></tv>" > "$OUTFILE"
              else
                echo "[$BASENAME] ‚úÖ Success"
              fi
            else
              echo "[$BASENAME] ‚ö†Ô∏è Channel file not found, creating placeholder XML..."
              echo "<?xml version='1.0' encoding='UTF-8'?><tv></tv>" > "$OUTFILE"
            fi
          }
          while read PROVIDER_PATH || [ -n "$PROVIDER_PATH" ]; do
            grab_provider "$PROVIDER_PATH" &
          done < scripts/epg/sites.txt
          wait

      - name: Merge XMLs
        working-directory: epg-repo
        run: python3 -u scripts/epg/epg_grabber.py

      # --- Nightly Downloader ---
      - name: Run EPG Downloader (nightly)
        if: github.event.schedule == '00 22 * * *'
        working-directory: epg-repo
        run: python3 -u scripts/epg/epg_downloader.py --url "$EPG_JIO_URL"

      # --- Tempest PHP Grabber (No Password) ---
      - name: Tempest PHP grabber
        working-directory: epg-repo
        run: |
          mkdir -p temp_epg
          7z x tempest_epg_grabber.zip -otemp_epg || echo "‚ö†Ô∏è No existing zip found, continuing..."
          php -d date.timezone=Asia/Kolkata temp_epg/tempest.php --epg config=tempest.config.xml
          python3 -u scripts/epg/tempest_epg.py
          rm -f temp_epg/tempest_config/epg/epg.xml
          rm -f tempest_epg_grabber.zip
          7z a -tzip tempest_epg_grabber.zip ./temp_epg/*
          rm -rf temp_epg

      # --- Commit and Push Using Git CLI ---
      - name: Commit and push changes to private repo
        working-directory: epg-repo
        run: |
          echo "üîç Checking for changes..."
          git status
          git add public/guide/*.xml.gz || true
          git add tempest_epg_grabber.zip || true

          if git diff --cached --quiet; then
            echo "‚úÖ No changes to commit."
          else
            git commit -m "üì∫ Automatically updated EPG"
            for i in 1 2 3; do
              if git push https://${EPG_REPO_PAT}@github.com/${EPG_REPO_NAME}.git main; then
                echo "üöÄ Push complete!"
                break
              else
                echo "‚ö†Ô∏è Push failed, pulling latest changes and retrying... (attempt $i)"
                git pull --rebase origin main || true
              fi
            done
          fi
